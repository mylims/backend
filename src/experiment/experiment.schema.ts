import { gql } from 'apollo-server-fastify';

export const experimentSchema = gql`
  type Status {
    kind: String!
    date: String
  }

  input StatusInput {
    kind: String!
    date: String
  }

  type Experiment {
    _id: String! # it's the same generated by MongoDB
    uuid: String! # generated uuid TODO delete
    codeId: String! # human readable uuid
    owners: [String!]
    tags: [String!]
    title: String!
    description: String
    creationDate: String!
    lastModificationDate: String
    status: [Status!]
    meta: JSON
    input: [Sample!]
    output: [Sample!]
    # components: [Component]
  }

  input ExperimentInput {
    owners: [String!]
    tags: [String!]
    title: String!
    description: String
    creationDate: String
    lastModificationDate: String
    status: [StatusInput!]
    meta: JSON
  }

  extend type Query {
    # search experiment by ids
    experiment(_id: String!): Experiment
    experimentByCodeId(codeId: String!): Experiment
    experimentByUuid(uuid: String!): Experiment

    # general search
    experimentByOwner(owner: String!): [Experiment!]
    experimentByTag(tag: String!): [Experiment!]
    experimentByTitle(title: String!): [Experiment!]
  }

  extend type Mutation {
    createExperiment(experiment: ExperimentInput!): Experiment
    updateExperiment(
      _id: String!
      tags: [String!]
      title: String
      description: String
      status: [StatusInput!]
      meta: JSON
      input: [String!]
      output: [String!]
    ): Experiment
    appendInput(sampleId: String!, experimentId: String!): Experiment
    appendOutput(sampleId: String!, experimentId: String!): Experiment
  }
`;
